{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","console","log","setState","searchField","target","value","state","fetch","then","response","json","users","err","alert","this","filteredMonsters","filter","el","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,G,kBAAO,SAAAC,GAChB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aCJjBC,EAAW,SAAAR,GAEpB,OACI,sBAAKC,UAAU,YAAf,cACID,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAElB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCN1BO,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OAAQ,uBACJZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC6CHG,E,kDA/Cb,aAAe,IAAD,8BACZ,gBAsBFH,aAAe,SAAAI,GACbC,QAAQC,IAAR,gBACA,EAAKC,SAAS,CAAEC,YAAaJ,EAAEK,OAAOC,SAtBtC,EAAKC,MAAQ,CACXf,SAAU,GACVY,YAAa,IALH,E,gEAUO,IAAD,OAClB,IACEI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,EAAKT,SAAS,CAAEX,SAAUoB,OAE9B,MAAOC,GACPC,MAAM,e,+BASA,IAAD,EAE2BC,KAAKR,MAA/Bf,EAFD,EAECA,SAAUY,EAFX,EAEWA,YACZY,EAAmBxB,EAASyB,QAAO,SAAAC,GAAE,OAAIA,EAAG7B,KAAK8B,cAAcC,SAAShB,EAAYe,kBAE1F,OAEE,sBAAKnC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aACvCmB,KAAKnB,eAEP,cAAC,EAAD,CAAUJ,SAAUwB,W,GAxCVK,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e666807e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => {\r\n    return (\r\n        <div className=\"card-container\" >\r\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=150x150`} alt=\"Monster\" />\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport \"./card-list.styles.css\";\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = props => {\r\n\r\n    return (\r\n        <div className=\"card-list\"> {\r\n            props.monsters.map(monster =>\r\n                (\r\n                    <Card key={monster.id} monster={monster} />\r\n                )\r\n            )\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n    return (<input\r\n        className=\"search\"\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={handleChange} />)\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n\n  }\n\n  componentDidMount() {\n    try {\n      fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => {\n          this.setState({ monsters: users });\n        });\n    } catch (err) {\n      alert(\"no data!\");\n    }\n\n  }\n\n  handleChange = e => {\n    console.log(this);\n    this.setState({ searchField: e.target.value })\n  }\n  render() {\n\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(el => el.name.toLowerCase().includes(searchField.toLowerCase()))\n\n    return (\n\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder=\"search monsters\" handleChange={\n          this.handleChange\n        } />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    )\n  }\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}